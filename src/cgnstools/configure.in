
AC_PREREQ(2.13)

AC_INIT(cgnsview/cgnsview.tcl)

#--------------------------------------------------------------------------
# get the C compiler
# If a C compiler not found, fail since can't build library
#--------------------------------------------------------------------------

AC_MSG_CHECKING([if gcc is requested])
AC_ARG_ENABLE(gcc,
  [  --enable-gcc            use gcc if it exists [default=cc]],,
  enableval=no)
test ! "$enableval" = "no" && enableval=yes
use_gcc=$enableval
AC_MSG_RESULT($use_gcc)

if test $use_gcc = yes; then
  AC_PROG_CC
else
  if test -z "$CC"; then
    AC_CHECK_PROG(CC, cc, cc, , , /usr/ucb/cc)
    if test -z "$CC"; then
      AC_CHECK_PROG(CC, gcc, gcc)
      if test -z "$CC"; then
        AC_MSG_ERROR([no acceptable cc found in \$PATH])
      fi
    fi
  fi
  AC_PROG_CC_WORKS
  AC_PROG_CC_GNU
fi

if test "$ac_cv_prog_gcc" = "yes"; then
  test -z "$CFLAGS" && CFLAGS=-O2
fi

# check if the compiler supports prototyping

AC_LANG_C
AC_MSG_CHECKING([if compiler supports prototyping])
AC_TRY_COMPILE(
[extern int func(int,int);
int func(int i, int j){return i + j;}],
[func(0,1)],proto=yes,proto=no)
AC_MSG_RESULT($proto)
test $proto = yes && CFLAGS="-DPROTOTYPE $CFLAGS"

#--------------------------------------------------------------------------
# get object and executable extensions
#--------------------------------------------------------------------------

AC_OBJEXT
AC_EXEEXT
LIBEXT=a

#--------------------------------------------------------------------------
# check if debug requested
#--------------------------------------------------------------------------

AC_MSG_CHECKING([if debugging is enabled])
AC_ARG_ENABLE(debug,
  [  --enable-debug[=OPTS]   build for debugging [default=no]],,
  enableval=no)
if test "$enableval" = "no"; then
  debug=no
else
  if test "$enableval" = "" || test "$enableval" = "yes"; then
    opt=-g
  else
    opt=$enableval
  fi
  CFLAGS="$opt $CFLAGS"
  debug=yes
fi
AC_MSG_RESULT($debug)

#--------------------------------------------------------------------------
# check for programs - initialize library archiver
#--------------------------------------------------------------------------

AR="ar cr"
AC_CHECK_PROG(RANLIB,ranlib,ranlib,:)
if test $debug = yes; then
  STRIP=:
else
  AC_CHECK_PROG(STRIP,strip,strip,:)
fi
AROUT=

#---------------------------------------------------------------------------
# get CGNS header path and library
#---------------------------------------------------------------------------

AC_MSG_CHECKING([if CGNS directory was specified])
AC_ARG_WITH(cgns,
  [  --with-cgns=CGNSdir     directory containing CGNS distribution],
  cgnsdir=$withval)
if test -z "$cgnsdir" || test "$cgnsdir" = "no"; then
  AC_MSG_RESULT(no)
  AC_MSG_CHECKING(for CGNS distribution)
  for d in \
    .. \
    `ls -dr * 2>/dev/null` \
    `ls -dr ../* 2>/dev/null` \
    `ls -dr ../../* 2>/dev/null` \
    `ls -dr ../../../* 2>/dev/null` ; do
    if test -f "$d/cgnslib.h" && test -f "$d/cgns_io.h"; then
      CGNSDIR=`(cd $d; pwd)`
      break
    fi
  done
  AC_MSG_RESULT($CGNSDIR)
  if test "$CGNSDIR" = ""; then
    AC_MSG_ERROR(can't find CGNS distribution:use --with-cgns=CGNSdir)
  fi
else
  AC_MSG_RESULT($cgnsdir)
  if test -f "$cgnsdir/cgnslib.h" && test -f "$cgnsdir/cgns_io.h"; then
    CGNSDIR=`(cd $cgnsdir; pwd)`
  else
    AC_MSG_ERROR($cgnsdir directory does not contain cgnslib.h and cgns_io.h)
  fi
fi

#--------------------------------------------------------------------------
# get the system name
#--------------------------------------------------------------------------

if test -f $CGNSDIR/cgsystem; then
  cmp=`diff cgsystem $CGNSDIR/cgsystem`
  if test ! -z "$cmp"; then
    /bin/rm cgsystem
    /bin/cp $CGNSDIR/cgsystem cgsystem
  fi
fi

test ! -x cgsystem && chmod +x cgsystem

AC_MSG_CHECKING([if system was specified])
AC_ARG_WITH(system,
  [  --with-system[=SYSTEM]  specify system],withsys=$withval)
if test -z "$withsys" || test "$withsys" = "no"; then
  AC_MSG_RESULT(no)
  AC_MSG_CHECKING([if 64bit support is requested])
  AC_ARG_ENABLE(64bit,
    [  --enable-64bit          enable 64bit support (where applicable)],,
    enableval=no)
  test ! "$enableval" = "no" && enableval=yes
  do64bit=$enableval
  AC_MSG_RESULT($do64bit)
  test $do64bit = yes && opts=-64
  AC_MSG_CHECKING(cgsystem)
  SYSTEM=`./cgsystem $opts`
  AC_MSG_RESULT($SYSTEM)
  if test $do64bit = yes; then
    is64bit=`echo $SYSTEM | grep 64`
    test -z "$is64bit" && \
      AC_MSG_WARN(64bit support not found for your machine)
  fi
else
  SYSTEM=$withsys
  AC_MSG_RESULT($SYSTEM)
fi

#--------------------------------------------------------------------------
# set compiler flags
#--------------------------------------------------------------------------

is64bit=`echo $SYSTEM | grep 64`
if test -z "$is64bit"; then
  is64bit=no
else
  is64bit=yes
fi

if test "$ac_cv_prog_gcc" = "no"; then
  case $SYSTEM in
    CRAY)   AR="bld rz" ;;
    HPPA11) SYSCFLAGS="+DA2.0" ;;
    HPPA64) SYSCFLAGS="+DA2.0W" ;;
    HPIT)   SYSCFLAGS="+DD32" ;;
    HPIT64) SYSCFLAGS="+DD64" ;;
    IBM64)  SYSCFLAGS="-q64"
            AR="ar -X64 cr"
            test $debug = no && STRIP="strip -X64" ;;
    SGI6)   SYSCFLAGS="-n32" ;;
    SGI64)  SYSCFLAGS="-64" ;;
    SUN64)  SYSCFLAGS="-xarch=v9" ;;
    DARWIN) CFLAGS="$CFLAGS -I/usr/include/sys" ;;
  esac
else
  if test "$is64bit" = "yes"; then
    gcc64bit=`$CC -dumpmachine | grep 64`
    if test -z "$gcc64bit"; then
      case $SYSTEM in
        HPPA64)  SYSCFLAGS="#-march=2.0" ;;
        HPIT64)  SYSCFLAGS="#-m64" ;;
        IBM64)   SYSCFLAGS="-maix64" ;;
        LINUX64) SYSCFLAGS="-m64" ;;
        SGI64)   SYSCFLAGS="-mabi=64" ;;
        SUN64)   SYSCFLAGS="-mcpu=v9 -m64" ;;
      esac
    fi
  else
    case $SYSTEM in
      SGI6) SYSCFLAGS="-mabi=n32" ;;
    esac
  fi
fi

# see if we can build a 64-bit code

if test "$is64bit" = "yes"; then
  CFLAGS_SAVE=$CFLAGS
  CFLAGS="$CFLAGS $SYSCFLAGS"
  AC_CHECK_SIZEOF([char *], 4)
  test $ac_cv_sizeof_char_p -lt 8 && \
    AC_MSG_WARN(does not appear your compiler can build 64-bit code)
  CFLAGS=$CFLAGS_SAVE
fi

#--------------------------------------------------------------------------
# cgnsplot options
#--------------------------------------------------------------------------

PLOTOPTS=""

AC_MSG_CHECKING([if cutting plane is requested])
AC_ARG_ENABLE(cut,
  [  --enable-cut            build cgnsplot with cut plane [default=yes]],,
  enableval=yes)
if test "$enableval" = "yes"; then
  AC_MSG_RESULT(yes)
else
  PLOTOPTS="-DNO_CUTTING_PLANE $PLOTOPTS"
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING([if mesh boundaries is requested])
AC_ARG_ENABLE(mesh,
  [  --enable-mesh           build cgnsplot with structured mesh boundaries [default=yes]],,
  enableval=yes)
if test "$enableval" = "yes"; then
  AC_MSG_RESULT(yes)
else
  PLOTOPTS="-DNO_MESH_BOUNDARIES $PLOTOPTS"
  AC_MSG_RESULT(no)
fi

#---------------------------------------------------------------------------
# search for headers
#---------------------------------------------------------------------------

#---------------------------------------------------------------------------
dnl Checks for typedefs, structures, and compiler characteristics.
#---------------------------------------------------------------------------

#--------------------------------------------------------------------------
dnl Checks for libraries.
dnl Replace `main' with a function in -lm:
#--------------------------------------------------------------------------

CALCOPTS=-DREAD_NODE

AC_CHECK_LIB(m, matherr)
if test "$ac_cv_lib_m_matherr" = "yes"; then
  CALCOPTS="$CALCOPTS -DUSE_MATHERR"
fi

#---------------------------------------------------------------------------
dnl Checks for library functions.
#---------------------------------------------------------------------------

AC_TYPE_SIGNAL
if test ! "$ac_cv_type_signal" = "void"; then
  CALCOPTS="$CALCOPTS -DSIGNAL=$ac_cv_type_signal"
fi

#---------------------------------------------------------------------------
# get path to X11 headers and libraries
#---------------------------------------------------------------------------

if test "$ac_cv_cygwin" = "no"; then
  AC_PATH_X
  if ! test "$x_includes" = ""; then
    X11INCS=-I$x_includes
  fi
  if ! test "$x_libraries" = ""; then
    X11LIBS="-L$x_libraries -lX11"
  else
    X11LIBS=-lX11
  fi
fi

#---------------------------------------------------------------------------
# try to find the Tk configuration file, tkConfig.sh
#---------------------------------------------------------------------------

AC_MSG_CHECKING([if Tcl directory was specified])
AC_ARG_WITH(tcl,
  [  --with-tcl=TCLdir       directory containing Tcl distribution],
  tcldir=$withval,tcldir="")
if test -z "$tcldir" || test "$tcldir" = "no"; then
  tcldir=""
  AC_MSG_RESULT(no)
else
  AC_MSG_RESULT($tcldir)
fi

AC_MSG_CHECKING([if Tk directory was specified])
AC_ARG_WITH(tk,
  [  --with-tk=TKdir         directory containing TK distribution],
  tkdir=$withval,tkdir="")
if test -z "$tkdir" || test "$tkdir" = "no"; then
  tkdir=""
  AC_MSG_RESULT(no)
else
  AC_MSG_RESULT($tkdir)
fi

TKCONFIG=""
LIBRARY_PATH=""

if test -z "$tcldir" && test -z "$tkdir"; then
  AC_MSG_CHECKING([for installed version of Tk])
  for d in /lib /usr/lib /usr/local/lib /usr/lib64 ; do
    if test -f $d/tkConfig.sh ; then
      AC_MSG_RESULT($d)
      TKCONFIG=$d/tkConfig.sh
      break
    fi
  done
  if test -z "$TKCONFIG"; then
    AC_MSG_RESULT(no)
    AC_MSG_CHECKING([for local Tk distribution])
    for d in \
      `ls -dr ../tk8* 2>/dev/null` \
      `ls -dr ../../tk8* 2>/dev/null` \
      `ls -dr ../../../tk8* 2>/dev/null` ; do
      if test -f "$d/unix/tkConfig.sh"; then
        tkdir=`(cd $d; pwd)`
        break
      fi
    done
    if test -z "$tkdir"; then
      AC_MSG_RESULT(no)
    else
      AC_MSG_RESULT($tkdir)
    fi
  else
    . $TKCONFIG
    if test -z "$TK_LIB_FLAG"; then
      if test -z "$TK_LIB_SPEC"; then
        TK_LIB_SPEC=$TK_BUILD_LIB_SPEC
      fi
      for i in $TK_LIB_SPEC ; do
        if test ! -z `echo $i | grep -e -ltk* -` ; then
          TK_LIB_FLAG=$i
          break
        fi
      done
    fi
    if test -z "$TK_LIB_FLAG"; then
      TK_LIB_FLAG=-ltk
    fi
    tcllib=`echo $TK_LIB_FLAG | sed 's/tk/tcl/'`
    X11LIBS=""
    TKLIBS="$tcllib $TK_LIB_FLAG $TK_LIBS"
  fi
fi

if test ! -z "$tcldir"; then
  if test ! -d "$tcldir"; then
    AC_MSG_ERROR(Tcl directory $tcldir not found)
  fi
  tcldir=`(cd $tcldir; pwd)`
  if test ! -f "$tcldir/unix/tclConfig.sh"; then
    AC_MSG_ERROR(tclConfig.sh not found in $tcldir/unix)
  fi
  if test -z "$tkdir"; then
    dir=`dirname $tcldir`
    for d in `ls -dr $dir/tk* 2>/dev/null` ; do
      if test -f "$d/unix/tkConfig.sh"; then
        tkdir=$d
        break
      fi
    done
    if test -z "$tkdir"; then
      AC_MSG_ERROR(can't find a usable Tk directory)
    fi
  fi
fi

if test ! -z "$tkdir"; then
  if test ! -d "$tkdir"; then
    AC_MSG_ERROR(Tk directory $tkdir not found)
  fi
  tkdir=`(cd $tkdir; pwd)`
  TKCONFIG="$tkdir/unix/tkConfig.sh"
  if test ! -f "$TKCONFIG"; then
    AC_MSG_ERROR(tkConfig.sh not found in $tkdir/unix)
  fi
  if test -z "$tcldir"; then
    dir=`dirname $tkdir`
    for d in `ls -dr $dir/tcl* 2>/dev/null` ; do
      if test -f "$d/unix/tclConfig.sh"; then
        tcldir=$d
        break
      fi
    done
    if test -z "$tcldir"; then
      AC_MSG_ERROR(can't find a usable Tcl directory)
    fi
  fi
  . $TKCONFIG
  tcllib=`ls -d $tcldir/unix/libtcl8* 2>/dev/null`
  tklib=`ls -d $tkdir/unix/libtk8* 2>/dev/null`
  X11LIBS=""
  TKINCS="-I$tcldir/generic -I$tkdir/generic"
  if test "$ac_cv_cygwin" = "yes"; then
    TKINCS="$TKINCS -I$tkdir/win -I$tkdir/xlib"
  fi
  TKLIBS="$tcllib $tklib $TK_LIBS"
  TCL_LIBRARY="$tcldir/library"
  TK_LIBRARY="$tkdir/library"
  LIBRARY_PATH="$tcldir/unix:$tkdir/unix"
fi

if test -z "$TKCONFIG"; then
  AC_MSG_WARN([couldn't find a tkConfig.sh])
  AC_MSG_WARN([edit make.defs and set TKINCS and TKLIBS])
  TKLIBS="-ltcl -ltk"
else
  if test "$ac_cv_cygwin" = "yes"; then
    if test -z "$TKINCS"; then
      tkvers="$TK_MAJOR_VERSION$TK_MINOR_VERSION"
      if test -d "cygwin/tk$tkvers"; then
        TKINCS="-I../cygwin/tk$tkvers"
      else
        AC_MSG_WARN([edit make.defs and fix TKINCS])
        TKINCS="#-I../cygwin/tk80"
      fi
    fi
    sharepath=`cygpath -m /usr/share`
    if test -z "$TCL_LIBRARY"; then
      for d in `ls -dr $sharepath/tcl8* 2>/dev/null` ; do
        if test -f "$d/init.tcl"; then
          TCL_LIBRARY=$d
          break
        fi
      done
    fi
    if test -z "$TK_LIBRARY"; then
      for d in `ls -dr $sharepath/tk8* 2>/dev/null` ; do
        if test -f "$d/tk.tcl"; then
          TK_LIBRARY=$d
          break
        fi
      done
    fi
  fi
fi

if test -z "$TCL_LIBRARY"; then
  TCL_LIBRARY_SPEC="#export TCL_LIBRARY="
else
  TCL_LIBRARY_SPEC="TCL_LIBRARY=$TCL_LIBRARY; export TCL_LIBRARY"
fi

if test -z "$TK_LIBRARY"; then
  TK_LIBRARY_SPEC="#export TK_LIBRARY="
else
  TK_LIBRARY_SPEC="TK_LIBRARY=$TK_LIBRARY; export TK_LIBRARY"
fi

if test -z "$LIBRARY_PATH"; then
  LIBRARY_PATH_SPEC="#export LD_LIBRARY_PATH="
elif test $SYSTEM = SGI6 ; then
  LIBRARY_PATH_SPEC="LD_LIBRARYN32_PATH=\$LD_LIBRARYN32_PATH:$LIBRARY_PATH; export LD_LIBRARYN32_PATH"
else
  LIBRARY_PATH_SPEC="LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:$LIBRARY_PATH; export LD_LIBRARY_PATH"
fi

#---------------------------------------------------------------------------
# try to find OpenGL headers and libraries
# should probably check for Mesa
#---------------------------------------------------------------------------

PROGLIST="cgnsview tools utilities"
INSTLIST="install-cgnsview install-tools install-utilities"

AC_CHECK_HEADER(GL/gl.h)
if test "$ac_cv_header_GL_gl_h" = "no"; then
  if test -f "$x_includes/GL/gl.h"; then
    PROGLIST="$PROGLIST cgnsplot"
    INSTLIST="$INSTLIST install-cgnsplot"
  else
    AC_MSG_WARN([couldn't find OpenGL])
    AC_MSG_WARN([edit make.defs to set OGLINCS and OGLLIBS])
  fi
else
  PROGLIST="$PROGLIST cgnsplot"
  INSTLIST="$INSTLIST install-cgnsplot"
fi

OGLINCS=""
if test "$ac_cv_cygwin" = "yes"; then
  OGLLIBS="-L/lib/win32api -lgdi32 -lopengl32 -lglu32"
else
  OGLLIBS="-lGL -lGLU"
fi

#---------------------------------------------------------------------------
# tkogl settings
#---------------------------------------------------------------------------

if test "$ac_cv_cygwin" = "yes"; then
  TKOGLXLIB=""
  TKOGLOPTS="-D_WIN32"
else
  TKOGLXLIB="-lXmu -lXext"
  TKOGLOPTS=""
fi

#---------------------------------------------------------------------------
# installation program
#---------------------------------------------------------------------------

if test ! -x install-sh; then
  chmod +x install-sh
fi

AC_PROG_INSTALL
case $INSTALL in
  ./*) INSTALL=".$INSTALL" ;;
esac

if test "$prefix" = "NONE"; then
  prefix=/usr/local
fi
if test "$exec_prefix" = "NONE"; then
  exec_prefix=$prefix
fi
if test "$datadir" = "\${prefix}/share"; then
  datadir=$datadir/cgnstools
fi
eval "BIN_INSTALL_DIR=$bindir"
eval "LIB_INSTALL_DIR=$datadir"

AC_MSG_CHECKING([if multi-platform support is requested])
AC_ARG_ENABLE(multi,
  [  --enable-multi          enable multi-platform support],
  enable=yes,enable=no)
AC_MSG_RESULT($enable)

if test $enable = yes; then
  AC_MSG_CHECKING([where to install shell scripts])
  AC_MSG_RESULT($BIN_INSTALL_DIR)
  EXE_INSTALL_DIR=$BIN_INSTALL_DIR/$SYSTEM
else
  EXE_INSTALL_DIR=$BIN_INSTALL_DIR
fi

AC_MSG_CHECKING([where to install executables])
AC_MSG_RESULT($EXE_INSTALL_DIR)

AC_MSG_CHECKING([where to install Tcl scripts])
AC_MSG_RESULT($LIB_INSTALL_DIR)

if test "$ac_cv_cygwin" = "yes"; then
  CG_BIN_DIR=`cygpath -m $BIN_INSTALL_DIR`
  CG_LIB_DIR=`cygpath -m $LIB_INSTALL_DIR`
else
  CG_BIN_DIR=$BIN_INSTALL_DIR
  CG_LIB_DIR=$LIB_INSTALL_DIR
fi

#----------------------------------------------------------------------------

AC_PROG_MAKE_SET

AC_SUBST(PROGLIST)
AC_SUBST(INSTLIST)

AC_SUBST(SYSTEM)
AC_SUBST(CGNSDIR)

AC_SUBST(LIBEXT)

AC_SUBST(SYSCFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(LIBS)

AC_SUBST(STRIP)

AC_SUBST(AR)
AC_SUBST(AROUT)
AC_SUBST(RANLIB)

AC_SUBST(BIN_INSTALL_DIR)
AC_SUBST(EXE_INSTALL_DIR)
AC_SUBST(LIB_INSTALL_DIR)

AC_SUBST(TKINCS)
AC_SUBST(TKLIBS)

AC_SUBST(X11INCS)
AC_SUBST(X11LIBS)

AC_SUBST(OGLINCS)
AC_SUBST(OGLLIBS)

AC_SUBST(PLOTOPTS)

AC_SUBST(TKOGLXLIB)
AC_SUBST(TKOGLOPTS)

AC_SUBST(CALCOPTS)

AC_SUBST(CG_BIN_DIR)
AC_SUBST(CG_LIB_DIR)
AC_SUBST(TCL_LIBRARY_SPEC)
AC_SUBST(TK_LIBRARY_SPEC)
AC_SUBST(LIBRARY_PATH_SPEC)

for f in Makefile make.defs cgconfig ; do
  if test -f $f; then
    mv $f $f.bak
    echo "$f already exists - renamed to $f.bak"
  fi
done

AC_OUTPUT(Makefile make.defs cgconfig calclib/Makefile cgnscalc/Makefile \
  cgnsplot/Makefile cgnssh/Makefile cgnsview/Makefile tkogl/Makefile \
  tools/Makefile utilities/Makefile)

